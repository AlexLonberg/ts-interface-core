{
  // Конфигурация для тестов. Копируем и изменяем параметры основного tsconfig.dist.json.
  "compilerOptions": {
    "incremental": true, // +
    "composite": true, // +
    "tsBuildInfoFile": "./.temp/.tsbuildinfo_project",
    "target": "ESNext",
    "lib": [
      "ESNext"
    ],
    "module": "NodeNext",
    // NOTE Если есть дополнительные файлы в рабочем каталоге, например scripts, меняем ./src на рабочую директорию.
    "rootDir": ".", // +
    "moduleResolution": "NodeNext",
    "types": [],
    "declaration": true,
    "declarationMap": false,
    // NOTE На всякий случай, по факту проектные файлы не компилируются.
    "outDir": "./.temp/project", // +
    "removeComments": false,
    "noEmit": true, // +
    "noEmitOnError": false, // +
    "declarationDir": null,
    "isolatedModules": true,
    "verbatimModuleSyntax": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "strictNullChecks": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "exactOptionalPropertyTypes": true,
    "noImplicitReturns": true,
    "noUncheckedIndexedAccess": true,
    "noImplicitOverride": true,
    "allowUnreachableCode": false,
    "skipLibCheck": true,
    "disableSizeLimit": true
  },
  "typeAcquisition": {
    "disableFilenameBasedTypeAcquisition": true
  },
  // TODO Включаем все файлы проекта или выбираем специфичные и тесты исключая целевые источники.
  // При включении всех файлов, TS будет видеть типы в файлах библиотеки src, или файлы целевой библиотеки будут видеть
  // типы проектных файлов - это не всегда требуемое поведение.
  // Обработка пересекающихся файлов зависит от порядка tsconfig.json-references определения проектов.
  "include": [
    "src/**/*.ts",
    "src/**/*.js",
    "scripts/**/*.ts",
    "scripts/**/*.js"
  ],
  "files": [
    "eslint.config.js",
    "vitest.config.ts"
  ],
  // https://typestrong.org/ts-node/docs/configuration/
  "ts-node": {
    "transpileOnly": true
  },
  "references": null
}
